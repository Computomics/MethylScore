/* -------------------------------------------------
 * Nextflow config file for MethylScore
 * -------------------------------------------------
 */

env {
  LC_ALL = "C"
}

process {

  withName: BUILD {
  	cpus = 2
  	memory = { 4.GB * task.attempt }
  }

  withName: DEDUPLICATE {
  	cpus = 2
  	memory = { 4.GB * task.attempt }
  }

  withName: READ_STATISTICS {
  	cpus = 1
  	memory = {512.MB * task.attempt }
  }

  withName: SPLIT_BAM {
  	cpus = 1
  	memory = { 4.GB * task.attempt }
  }

  withName: SPLIT_BEDGRAPH {
  	cpus = 1
  	memory = { 2.GB * task.attempt }
  }

  withName: SPLIT_MATRIX {
  	cpus = 1
  	memory = { 2.GB * task.attempt }
  }

  withName: BUILD_INDEX {
    cpus = 2
  	memory = { 4.GB * task.attempt }
  }

  withName: CALL_MRS {
  	cpus = 1
  	memory = { 4.GB * task.attempt }
  }

  withName: IGV {
  	cpus = 1
  	memory = { 256.MB * task.attempt }
  }

  withName: MR_STATISTICS {
  	cpus = 1
  	memory = {512.MB * task.attempt }
  }

  withName: SPLIT_MRS {
  	cpus = 1
  	memory = { 4.GB * task.attempt }
  }

  withName: CALL_DMRS {
  	cpus = 1
  	memory = { 1.GB * task.attempt }
  }

  withName: MERGE_DMRS {
  	cpus = 1
  	memory = { 128.MB * task.attempt }
  }

  withName: RUN_DSS {
    time = { 72.h * task.attempt }
  	cpus = { 8 * task.attempt }
  	memory = { 32.GB * task.attempt }
  	//memory = { 128.GB * task.attempt }
  }
  withName: RUN_DMRSEQ {
    time = { 24.h * task.attempt }
  	cpus = { 8 * task.attempt }
  	memory = { 128.GB * task.attempt }
  }
  withName: RUN_HOME {
    time = { 8.h * task.attempt }
    cpus = { 8 * task.attempt }
  	memory = { 64.GB * task.attempt }
  }
  withName: RUN_DMRFIND {
    time = { 8.h * task.attempt }
  	cpus = { 8 * task.attempt }
  	memory = { 64.GB * task.attempt }
  }
  withName: RUN_METILENE {
    time = { 24.h * task.attempt }
  	cpus = { 8 * task.attempt }
  	memory = { 64.GB * task.attempt }
  }
  withName: RUN_METHYLKIT {
    time = { 8.h * task.attempt }
  	cpus = { 8 * task.attempt }
  	memory = { 64.GB * task.attempt }
  }

  errorStrategy = { ( task.exitStatus == 143 || task.exitStatus == 137 ) ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
}

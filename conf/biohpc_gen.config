env {
  SLURM_CLUSTERS='biohpc_gen'
}

charliecloud {
  enabled = true
}

process {
  executor = 'slurm'
  queue = { task.memory <= 1536.GB ? (task.time > 2.d || task.memory > 384.GB ? 'biohpc_gen_production' : 'biohpc_gen_normal') : 'biohpc_gen_highmem' }
  beforeScript = 'module use /dss/dsslegfs02/pn73se/pn73se-dss-0000/spack/modules/x86_avx2/linux*'
  module = 'charliecloud/0.22'

  withName: BUILD {
  	cpus = 2
  	memory = { 4.GB * task.attempt }
  	time = { 16.h * task.attempt }
  }

  withName: INDEX {
  	cpus = 4
  	memory = { 4.GB * task.attempt }
  	time = { 8.h * task.attempt }
  }

  withName: DEDUPLICATE {
  	cpus = 1
  	memory = { 16.GB * task.attempt }
  	time = { 2.h * task.attempt }
  }

  withName: READ_STATISTICS {
  	cpus = 1
  	memory = {512.MB * task.attempt }
  	time = { 1.h * task.attempt }
  }
  
  withName: MR_STATISTICS {
  	cpus = 1
  	memory = {256.MB * task.attempt }
  	time = { 1.h * task.attempt }
  }

  withName: SPLIT_BAM {
  	cpus = 1
  	memory = { 4.GB * task.attempt }
  	time = { 1.h * task.attempt }
  }

  withName: SPLIT_BEDGRAPH {
  	cpus = 1
  	memory = { 1.GB * task.attempt }
  	time = { 1.h * task.attempt }
  }

  withName: SPLIT_MATRIX {
  	cpus = 1
  	memory = { 1.GB * task.attempt }
  	time = { 1.h * task.attempt }
  }

  withName: GENERATE {
  	cpus = 1
  	memory = { 128.MB * task.attempt }
  	time = { 5.min * task.attempt }
  }

  withName: CALL_MRS {
  	cpus = 1
  	memory = { 8.GB * task.attempt }
  	time = { 8.h * task.attempt }
  }

  withName: IGV {
  	cpus = 1
  	memory = { 256.MB * task.attempt }
  	time = { 1.h * task.attempt }
  }

  withName: SPLIT_MRS {
  	cpus = 1
  	memory = { 8.GB * task.attempt }
  	time = { 8.h * task.attempt }
  }

  withName: CALL_DMRS {
  	cpus = 1
        errorStrategy = 'retry'
  	memory = { 6.GB * task.attempt }
  	time = { 4.h * task.attempt }
  }

  withName: MERGE_DMRS {
  	cpus = 1
  	memory = { 512.MB * task.attempt }
  	time = { 30.m * task.attempt }
  }

  errorStrategy = { ( task.exitStatus == 143 || task.exitStatus == 137 ) ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
}
